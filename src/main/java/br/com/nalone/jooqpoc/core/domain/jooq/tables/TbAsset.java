/*
 * This file is generated by jOOQ.
*/
package br.com.nalone.jooqpoc.core.domain.jooq.tables;


import br.com.nalone.jooqpoc.core.domain.jooq.Keys;
import br.com.nalone.jooqpoc.core.domain.jooq.Public;
import br.com.nalone.jooqpoc.core.domain.jooq.tables.records.TbAssetRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TbAsset extends TableImpl<TbAssetRecord> {

    private static final long serialVersionUID = 1162390175;

    /**
     * The reference instance of <code>public.tb_asset</code>
     */
    public static final TbAsset TB_ASSET = new TbAsset();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TbAssetRecord> getRecordType() {
        return TbAssetRecord.class;
    }

    /**
     * The column <code>public.tb_asset.id_asset</code>.
     */
    public final TableField<TbAssetRecord, Long> ID_ASSET = createField("id_asset", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.tb_asset.tx_acronym</code>.
     */
    public final TableField<TbAssetRecord, String> TX_ACRONYM = createField("tx_acronym", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.tb_asset.tx_description</code>.
     */
    public final TableField<TbAssetRecord, String> TX_DESCRIPTION = createField("tx_description", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.tb_asset.tx_name</code>.
     */
    public final TableField<TbAssetRecord, String> TX_NAME = createField("tx_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.tb_asset.dt_wallet_date</code>.
     */
    public final TableField<TbAssetRecord, Timestamp> DT_WALLET_DATE = createField("dt_wallet_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.tb_asset.id_wallet</code>.
     */
    public final TableField<TbAssetRecord, Long> ID_WALLET = createField("id_wallet", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.tb_asset</code> table reference
     */
    public TbAsset() {
        this("tb_asset", null);
    }

    /**
     * Create an aliased <code>public.tb_asset</code> table reference
     */
    public TbAsset(String alias) {
        this(alias, TB_ASSET);
    }

    private TbAsset(String alias, Table<TbAssetRecord> aliased) {
        this(alias, aliased, null);
    }

    private TbAsset(String alias, Table<TbAssetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TbAssetRecord> getPrimaryKey() {
        return Keys.TB_ASSET_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TbAssetRecord>> getKeys() {
        return Arrays.<UniqueKey<TbAssetRecord>>asList(Keys.TB_ASSET_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TbAssetRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TbAssetRecord, ?>>asList(Keys.TB_ASSET__FKDXK8WDQCCACGWMFDPWH2BUQB);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TbAsset as(String alias) {
        return new TbAsset(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TbAsset rename(String name) {
        return new TbAsset(name, null);
    }
}
