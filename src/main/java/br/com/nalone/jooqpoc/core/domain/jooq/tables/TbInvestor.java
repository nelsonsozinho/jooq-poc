/*
 * This file is generated by jOOQ.
*/
package br.com.nalone.jooqpoc.core.domain.jooq.tables;


import br.com.nalone.jooqpoc.core.domain.jooq.Keys;
import br.com.nalone.jooqpoc.core.domain.jooq.Public;
import br.com.nalone.jooqpoc.core.domain.jooq.tables.records.TbInvestorRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TbInvestor extends TableImpl<TbInvestorRecord> {

    private static final long serialVersionUID = -1242825811;

    /**
     * The reference instance of <code>public.tb_investor</code>
     */
    public static final TbInvestor TB_INVESTOR = new TbInvestor();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TbInvestorRecord> getRecordType() {
        return TbInvestorRecord.class;
    }

    /**
     * The column <code>public.tb_investor.id_investor</code>.
     */
    public final TableField<TbInvestorRecord, Long> ID_INVESTOR = createField("id_investor", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.tb_investor.tx_email</code>.
     */
    public final TableField<TbInvestorRecord, String> TX_EMAIL = createField("tx_email", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.tb_investor.tx_first_name</code>.
     */
    public final TableField<TbInvestorRecord, String> TX_FIRST_NAME = createField("tx_first_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.tb_investor.tx_last_name</code>.
     */
    public final TableField<TbInvestorRecord, String> TX_LAST_NAME = createField("tx_last_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.tb_investor.tx_password</code>.
     */
    public final TableField<TbInvestorRecord, String> TX_PASSWORD = createField("tx_password", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>public.tb_investor</code> table reference
     */
    public TbInvestor() {
        this("tb_investor", null);
    }

    /**
     * Create an aliased <code>public.tb_investor</code> table reference
     */
    public TbInvestor(String alias) {
        this(alias, TB_INVESTOR);
    }

    private TbInvestor(String alias, Table<TbInvestorRecord> aliased) {
        this(alias, aliased, null);
    }

    private TbInvestor(String alias, Table<TbInvestorRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TbInvestorRecord> getPrimaryKey() {
        return Keys.TB_INVESTOR_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TbInvestorRecord>> getKeys() {
        return Arrays.<UniqueKey<TbInvestorRecord>>asList(Keys.TB_INVESTOR_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TbInvestor as(String alias) {
        return new TbInvestor(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TbInvestor rename(String name) {
        return new TbInvestor(name, null);
    }
}
